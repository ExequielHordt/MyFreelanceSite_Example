:root {
    --white: #FFFFFF;
    --black: #212121;
    --primary: #FFC107;
    --secondary: #0097a7;
    --grey: #757575;
    --light-grey: #DFE9F3;

}

/* Global */

html {
    font-size: 62.5%;
    box-sizing: border-box;
    /* Hack for Box Model */
    scroll-snap-type: y mandatory;
}

/* Scroll Snap */
.service, .main-navigation, .form {
    scroll-snap-align: center;
    scroll-snap-stop: always;
}

*, *:before, *:after {
    box-sizing: inherit;
}

body {
    font-size: 16px;
    /* 1rem = 10px. Because 1 rem is approximately 16 pixels, then if we use 2 rem the value of our element would be 32 pixels; In order to handle this in a better, faster and easier way, what we do is "format" the value of 1 rem, that is, that 1 rem equals 10 px, so 62.5% of 16 is equal to 10. */
    font-family: 'Krub', sans-serif;
    background-image: linear-gradient(to top, var(--light-grey) 0%, var(--white) 100%);
    /* Gradient Background  */
}

.container {
    max-width: 120rem;
    margin: 0 auto;
}

.button {
    background-color: var(--secondary);
    color: var(--white);
    padding: 1rem 3rem;
    margin-top: 1rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: .5rem;
    width: 90%;
    text-align: center;
    border: none;
}

.shadow {
    box-shadow: 0px 5px 15px 0px rgba(112, 112, 112, 1);
    background-color: var(--white);
    padding-top: 2rem;
    padding-bottom: 5rem;
    border-radius: 2rem;
}

/* Typography */

h1 {
    font-size: 3.8rem;
}

h2 {
    font-size: 2.8rem;
}

h3 {
    font-size: 1.8rem;
}

h1, h2, h3 {
    text-align: center;
}

/* Title */

.title span {
    font-size: 2rem;
}

/* Main Navigation*/
.nav-bg {
    background-color: var(--secondary);
}

.main-navigation {
    display: flex;
    flex-direction: column;
}

.main-navigation a {
    display: block;
    text-align: center;
    color: var(--white);
    text-decoration: none;
    font-size: 2rem;
    font-weight: 700;
    padding: 1rem;
}

.main-navigation a:hover {
    background-color: var(--primary);
    color: var(--black);
}

/* Medias Querys */

@media (min-width: 768px) {
    .main-navigation {
        flex-direction: row;
        justify-content: space-between;
    }

    .button {
        width: auto;
    }

    .button:hover {
        cursor: pointer;
    }

    .services {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        /* This property consists of taking a whole number and dividing it into fractions. Where each place is occupied with each fraction. */
        column-gap: 1rem;
    }
}

/* Utilities */

.w-sm-100 {
    width: 100%;
}

.flex {
    display: flex;
}

.align-right {
    justify-content: flex-end;
}

@media (min-width: 768px) {
    .w-sm-100 {
        width: auto;
    }
}

/* Hero */
.hero {
    background-image: url(../Img/hero.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 450px;
    position: relative;
    margin-bottom: 2rem;
}

.content-hero {
    position: absolute;
    background-color: rgb(0, 0, 0, .7);
    /** Old Syntax **/
    background-color: rgb(0 0 0 / 70%);
    /** this property ranges from 0 to 100, 0 percent completely transparent and 100 completely black **/
    width: 100%;
    height: 100%;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    /** Reusable code to align vertically and horizontally. There are many ways to align, this is one of the easiest. **/
}

.content-hero h2, .content-hero p {
    color: var(--white);
}

.content-hero .location {
    display: flex;
    align-items: flex-end;
}

/* Service */
.service {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.service h3 {
    color: var(--secondary);
    font-weight: normal;
}

.service p {
    line-height: 2;
}

.service .icons {
    width: 15rem;
    height: 15rem;
    background-color: var(--primary);
    border-radius: 50%;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}

/* Contact */
.form {
    background-color: var(--grey);
    width: min(60rem, 100%);
    /* Use the minimum value */
    margin: 0 auto;
    padding-top: 2rem;
    padding-bottom: 2rem;
    border-radius: 1rem;
}

.form fieldset {
    border: none;
}

.form legend {
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 700;
    margin-top: 1rem;
    margin-bottom: 2rem;
    color: var(--primary);
}

@media (min-width: 768px) {
    .fields-container {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: auto auto 20rem;
        column-gap: 1rem;
        /* Column Spacing */
    }

    .fields:nth-child(3), .fields:nth-child(4) {
        /* This is a pseudo selector. In programming, arrays start at zero, but in this case they start at one. */
        grid-column: 1 / 3;
    }

    .fields {
        margin-bottom: 1rem;
    }
}

.fields label {
    color: var(--white);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block;
}

.fields textarea {
    height: 15rem;
}

.input-text {
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: .5rem;
}

/* Footer */
.footer {
    text-align: center;
}